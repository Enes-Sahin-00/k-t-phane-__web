# KÃ¼tÃ¼phane UygulamasÄ±

## Proje AÃ§Ä±klamasÄ±

Bu proje, ASP.NET Core MVC kullanÄ±larak geliÅŸtirilmiÅŸ modern bir kÃ¼tÃ¼phane yÃ¶netim sistemidir. CodeFirst yaklaÅŸÄ±mÄ± ile Entity Framework Core kullanÄ±larak oluÅŸturulmuÅŸtur.

## Ã–zellikler

### âœ… Tamamlanan Ã–zellikler
- **CodeFirst YaklaÅŸÄ±mÄ±**: Entity Framework Core ile veritabanÄ± tasarÄ±mÄ±
- **REST API**: TÃ¼m CRUD iÅŸlemleri iÃ§in API endpoint'leri
- **MVC YapÄ±sÄ±**: Model-View-Controller mimarisi
- **Admin Paneli**: Role-based authentication ile yÃ¶netim paneli
- **Sepet Sistemi**: KullanÄ±cÄ±larÄ±n kitap sepeti oluÅŸturabilmesi
- **Favori Sistemi**: KullanÄ±cÄ±larÄ±n kitap favorilerini yÃ¶netebilmesi
- **Kategori YÃ¶netimi**: Kitap kategorilerinin yÃ¶netimi
- **Responsive TasarÄ±m**: Bootstrap ile mobil uyumlu tasarÄ±m
- **Session YÃ¶netimi**: KullanÄ±cÄ± oturum yÃ¶netimi

### ðŸ“‹ MenÃ¼ YapÄ±sÄ±
- **Ana Sayfa**: Proje tanÄ±tÄ±mÄ± ve Ã¶zellikler
- **Kitaplar**: Kitap kataloÄŸu ve detaylarÄ±
- **Kategoriler**: Kitap kategorileri listesi
- **HakkÄ±mÄ±zda**: Åžirket bilgileri
- **Bize UlaÅŸÄ±n**: Ä°letiÅŸim bilgileri ve form

## Teknolojiler

- **Backend**: ASP.NET Core 8.0
- **VeritabanÄ±**: SQL Server (LocalDB)
- **ORM**: Entity Framework Core
- **Frontend**: Bootstrap 5.3.2
- **Authentication**: Session-based authentication

## Kurulum

1. **Projeyi klonlayÄ±n**
```bash
git clone [repository-url]
cd kÃ¼tÃ¼phaneuygulamasÄ±
```

2. **VeritabanÄ±nÄ± oluÅŸturun**
```bash
dotnet ef database update
```

3. **UygulamayÄ± Ã§alÄ±ÅŸtÄ±rÄ±n**
```bash
dotnet run
```

4. **TarayÄ±cÄ±da aÃ§Ä±n**
```
http://localhost:5247
```

## VeritabanÄ± YapÄ±sÄ±

### Tablolar

#### 1. usersaccounts (KullanÄ±cÄ±lar)
```sql
CREATE TABLE [usersaccounts] (
    [Id] int NOT NULL IDENTITY,
    [name] nvarchar(max) NOT NULL,
    [pass] nvarchar(max) NOT NULL,
    [role] nvarchar(max) NOT NULL,
    [email] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_usersaccounts] PRIMARY KEY ([Id])
);
```

#### 2. Category (Kategoriler)
```sql
CREATE TABLE [Category] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(max) NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    [ImageUrl] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Category] PRIMARY KEY ([Id])
);
```

#### 3. Book (Kitaplar)
```sql
CREATE TABLE [Book] (
    [Id] int NOT NULL IDENTITY,
    [title] nvarchar(max) NOT NULL,
    [info] nvarchar(max) NOT NULL,
    [bookquantity] int NOT NULL,
    [price] int NOT NULL,
    [cataid] int NOT NULL,
    [author] nvarchar(max) NOT NULL,
    [imgfile] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Book] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Book_Category_cataid] FOREIGN KEY ([cataid]) REFERENCES [Category] ([Id]) ON DELETE CASCADE
);
```

#### 4. Cart (Sepet)
```sql
CREATE TABLE [Cart] (
    [Id] int NOT NULL IDENTITY,
    [UserId] int NOT NULL,
    [BookId] int NOT NULL,
    [Quantity] int NOT NULL,
    [AddedDate] datetime2 NOT NULL,
    CONSTRAINT [PK_Cart] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Cart_Book_BookId] FOREIGN KEY ([BookId]) REFERENCES [Book] ([Id]) ON DELETE CASCADE
);
```

#### 5. Favorite (Favoriler)
```sql
CREATE TABLE [Favorite] (
    [Id] int NOT NULL IDENTITY,
    [UserId] int NOT NULL,
    [BookId] int NOT NULL,
    [AddedDate] datetime2 NOT NULL,
    CONSTRAINT [PK_Favorite] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Favorite_Book_BookId] FOREIGN KEY ([BookId]) REFERENCES [Book] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_Favorite_usersaccounts_UserId] FOREIGN KEY ([UserId]) REFERENCES [usersaccounts] ([Id]) ON DELETE CASCADE
);
```

#### 6. orders (SipariÅŸler)
```sql
CREATE TABLE [orders] (
    [Id] int NOT NULL IDENTITY,
    [bookId] int NOT NULL,
    [userid] int NOT NULL,
    [quantity] int NOT NULL,
    [orderdate] datetime2 NOT NULL,
    CONSTRAINT [PK_orders] PRIMARY KEY ([Id])
);
```

#### 7. report (Raporlar)
```sql
CREATE TABLE [report] (
    [Id] int NOT NULL IDENTITY,
    [customername] nvarchar(max) NOT NULL,
    [total] int NOT NULL,
    CONSTRAINT [PK_report] PRIMARY KEY ([Id])
);
```

## Ã–rnek Veri SorgularÄ±

### KullanÄ±cÄ±lar
```sql
SELECT TOP (1000) [Id], [name], [pass], [role], [email]
FROM [kutuphane].[dbo].[usersaccounts]
```

### Kitaplar
```sql
SELECT TOP (1000) [Id], [title], [info], [bookquantity], [price], [cataid], [author], [imgfile]
FROM [kutuphane].[dbo].[Book]
```

### Kategoriler
```sql
SELECT TOP (1000) [Id], [Name], [Description], [ImageUrl]
FROM [kutuphane].[dbo].[Category]
```

### Sepet
```sql
SELECT TOP (1000) [Id], [UserId], [BookId], [Quantity], [AddedDate]
FROM [kutuphane].[dbo].[Cart]
```

### Favoriler
```sql
SELECT TOP (1000) [Id], [UserId], [BookId], [AddedDate]
FROM [kutuphane].[dbo].[Favorite]
```

### SipariÅŸler
```sql
SELECT TOP (1000) [Id], [bookId], [userid], [quantity], [orderdate]
FROM [kutuphane].[dbo].[orders]
```

### Raporlar
```sql
SELECT TOP (1000) [Id], [customername], [total]
FROM [kutuphane].[dbo].[report]
```

### Migration GeÃ§miÅŸi
```sql
SELECT TOP (1000) [MigrationId], [ProductVersion]
FROM [kutuphane].[dbo].[__EFMigrationsHistory]
```

## API Endpoint'leri

### Kitaplar
- `GET /api/books` - TÃ¼m kitaplarÄ± listele
- `GET /api/books/{id}` - Belirli kitabÄ± getir
- `POST /api/books` - Yeni kitap ekle
- `PUT /api/books/{id}` - Kitap gÃ¼ncelle
- `DELETE /api/books/{id}` - Kitap sil

### Kategoriler
- `GET /api/categories` - TÃ¼m kategorileri listele
- `GET /api/categories/{id}` - Belirli kategoriyi getir
- `POST /api/categories` - Yeni kategori ekle

### SipariÅŸler
- `GET /api/orders` - TÃ¼m sipariÅŸleri listele
- `POST /api/orders` - Yeni sipariÅŸ ekle

### Favoriler
- `GET /api/favorites` - TÃ¼m favorileri listele
- `POST /api/favorites` - Yeni favori ekle
- `DELETE /api/favorites/{id}` - Favori sil

## VarsayÄ±lan KullanÄ±cÄ±lar

### Admin KullanÄ±cÄ±sÄ±
- **KullanÄ±cÄ± AdÄ±**: admin
- **Åžifre**: admin123
- **E-posta**: admin@admin.com
- **Rol**: admin

## Proje YapÄ±sÄ±

```
kÃ¼tÃ¼phaneuygulamasÄ±/
â”œâ”€â”€ Controllers/
â”‚   â”œâ”€â”€ ApiController.cs          # REST API
â”‚   â”œâ”€â”€ BooksController.cs        # Kitap yÃ¶netimi
â”‚   â”œâ”€â”€ CategoryController.cs     # Kategori yÃ¶netimi
â”‚   â”œâ”€â”€ CartController.cs         # Sepet iÅŸlemleri
â”‚   â”œâ”€â”€ FavoriteController.cs     # Favori iÅŸlemleri
â”‚   â”œâ”€â”€ HomeController.cs         # Ana sayfa
â”‚   â”œâ”€â”€ ordersController.cs       # SipariÅŸ yÃ¶netimi
â”‚   â””â”€â”€ usersaccountsController.cs # KullanÄ±cÄ± yÃ¶netimi
â”œâ”€â”€ Models/
â”‚   â”œâ”€â”€ Book.cs                   # Kitap modeli
â”‚   â”œâ”€â”€ Category.cs               # Kategori modeli
â”‚   â”œâ”€â”€ Cart.cs                   # Sepet modeli
â”‚   â”œâ”€â”€ Favorite.cs               # Favori modeli
â”‚   â”œâ”€â”€ orders.cs                 # SipariÅŸ modeli
â”‚   â”œâ”€â”€ usersaccounts.cs          # KullanÄ±cÄ± modeli
â”‚   â””â”€â”€ report.cs                 # Rapor modeli
â”œâ”€â”€ Views/
â”‚   â”œâ”€â”€ Books/                    # Kitap sayfalarÄ±
â”‚   â”œâ”€â”€ Category/                 # Kategori sayfalarÄ±
â”‚   â”œâ”€â”€ Cart/                     # Sepet sayfalarÄ±
â”‚   â”œâ”€â”€ Favorite/                 # Favori sayfalarÄ±
â”‚   â”œâ”€â”€ Home/                     # Ana sayfa
â”‚   â””â”€â”€ Shared/                   # Ortak layout
â”œâ”€â”€ Data/
â”‚   â”œâ”€â”€ kÃ¼tÃ¼phaneuygulamasÄ±Context.cs # DbContext
â”‚   â””â”€â”€ DbInitializer.cs          # Seed verileri
â””â”€â”€ wwwroot/                      # Statik dosyalar
```

## Lisans

Bu proje eÄŸitim amaÃ§lÄ± geliÅŸtirilmiÅŸtir.

## Ä°letiÅŸim

- **E-posta**: info@kutuphane.com
- **Telefon**: +90 212 555 0123
- **Adres**: Ä°stanbul, TÃ¼rkiye 